{"version":3,"sources":["Components/Containers/Container.js","Components/Containers/SubContainer.js","Components/DndComponents/Button.js","Components/DndComponents/ImgWrapper.js","Components/Modal.js","utils/useModal.js","Components/DndComponents/DndWrapper.js","App.js","serviceWorker.js","index.js"],"names":["Container","children","className","SubContainer","classes","Button","type","handleClick","text","onClick","e","ImgWrapper","activeTargets","isToggled","isSubmitted","useState","imgOverlaySrc","setImgOverlaySrc","gifOverlaySrc","setGifOverlaySrc","useEffect","console","log","low","high","hurricane","src","alt","style","visibility","opacity","Modal","isShowing","hide","modalData","ReactDOM","createPortal","aria-modal","aria-hidden","tabIndex","role","heading","data-dismiss","aria-label","data","document","body","useModal","setIsShowing","setModalData","toggle","element","target","getAttribute","DndWrapper","dragging","setDragging","dragItem","useRef","dragNode","title","items","accepts","dataTarget","dragData","setDragData","initialDragDataCopy","setInitialDragDataCopy","dropData","setDropData","initialDropDataCopy","setInitialDropDataCopy","setIsToggled","setIsSubmitted","getItemStyles","params","currentItem","current","grpI","itemI","handleDragEnter","oldDragData","newDragData","JSON","parse","stringify","splice","handleDragEnd","querySelectorAll","forEach","classList","remove","removeEventListener","map","grp","key","data-value","data-target","onDragEnter","length","item","draggable","id","onDragStart","addEventListener","setTimeout","param","add","getTargetStyles","handleDragStart","backgroundImage","defaultChecked","onChange","getElementById","display","preventDefault","App","Boolean","window","location","hostname","match","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.70f7a97a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Container = ({ children }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\n\r\nconst SubContainer = ({ children, classes }) => {\r\n    return (\r\n        <div className={`sub-container ${classes}`}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubContainer;","import React from 'react';\r\n\r\nconst Button = ({ type, handleClick, text }) => {\r\n    return (\r\n        <button\r\n            className=\"btn\"\r\n            type={type}\r\n            onClick={(e) => handleClick(e)}\r\n        >\r\n            {text}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst ImgWrapper = ({ activeTargets, isToggled, isSubmitted, children }) => {\r\n\r\n    const [imgOverlaySrc, setImgOverlaySrc] = useState(\"\")\r\n    const [gifOverlaySrc, setGifOverlaySrc] = useState(\"\")\r\n    useEffect(() => {\r\n        console.log(activeTargets)\r\n        setImgOverlaySrc(`${activeTargets.low}_${activeTargets.high}`)\r\n        setGifOverlaySrc(`${activeTargets.low}_${activeTargets.high}_${activeTargets.hurricane}`)\r\n    }, [activeTargets, isSubmitted])\r\n\r\n    return (\r\n        <div className=\"img-wrapper\">\r\n            <img\r\n                src=\"./graphics/movncane_base.jpg\"\r\n                alt=\"\"\r\n                className=\"img-background\"\r\n            />\r\n            <div className=\"img-overlay-container\">\r\n                <img\r\n                    src={`./graphics/${imgOverlaySrc}.png`}\r\n                    alt=\"\"\r\n                    className=\"img-overlay\"\r\n                    style={imgOverlaySrc && isToggled && activeTargets.hurricane ? { visibility: \"visible\", opacity: \"50%\" } : { visibility: \"hidden\" }}\r\n                />\r\n            </div>\r\n            {gifOverlaySrc && isSubmitted ? (\r\n                <div className=\"animated-gif\">\r\n                    <img\r\n                        src={`./graphics/${gifOverlaySrc}.gif`}\r\n                        alt=\"\"\r\n\r\n                    />\r\n                </div>\r\n            ) : (\r\n                    null\r\n                )\r\n            }\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImgWrapper;","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Modal = ({ isShowing, hide, modalData }) => isShowing ? ReactDOM.createPortal(\r\n    <>\r\n        <div className=\"modal-overlay\" />\r\n        <div className=\"modal-wrapper\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\r\n            <div className=\"modal\">\r\n                <div className=\"modal-header\">\r\n                    <h3>{modalData.heading}</h3>\r\n                </div>\r\n                <p>\r\n                    {modalData.text}\r\n                </p>\r\n                <button type=\"button\" className=\"btn modal-close-button\" data-dismiss=\"modal\" aria-label=\"Close\" data=\"close\" onClick={hide}>\r\n                    <span aria-hidden=\"true\" data=\"close\" onClick={hide}>Close</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </>, document.body\r\n) : null;\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\n\r\nconst useModal = () => {\r\n\r\n    const [isShowing, setIsShowing] = useState(false);\r\n    const [modalData, setModalData] = useState(\"\");\r\n\r\n    function toggle(e) {\r\n        let element = e.target.getAttribute(\"data\");\r\n        if (element === \"directions\") {\r\n            setModalData({\r\n                heading: \"How to Aim a Hurricane\",\r\n                text: \"Click and drag the red low (L) onto a low target over the United States, the blue high (H) onto a high target over the Atlantic Ocean, and the animated hurricane onto either starting location target over the Atlantic Ocean. When all three are positioned, a Start button will appear at left. Click it to see the storm track for that combination.\"\r\n            });\r\n            setIsShowing(!isShowing);\r\n        } else if (element === \"credits\") {\r\n            setModalData({\r\n                heading: \"Credits\",\r\n                text: 'The \"Aim a Hurricane\" simulator was built using the research and data of Dr. Mark DeMaria, NOAA/NESDIS/ORA.'\r\n            });\r\n            setIsShowing(!isShowing);\r\n        } else if (element === \"close\") {\r\n            setModalData(\"\");\r\n            setIsShowing(!isShowing);\r\n        }\r\n\r\n    }\r\n\r\n    return {\r\n        isShowing,\r\n        toggle,\r\n        modalData\r\n    };\r\n};\r\n\r\nexport default useModal;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Button from \"./Button\";\r\nimport ImgWrapper from './ImgWrapper';\r\nimport SubContainer from '../Containers/SubContainer';\r\nimport Modal from \"../Modal\";\r\nimport useModal from \"../../utils/useModal\";\r\n\r\nconst DndWrapper = () => {\r\n\r\n    const [dragging, setDragging] = useState(false);\r\n    const dragItem = useRef();\r\n    const dragNode = useRef();\r\n    const [dragData, setDragData] = useState([\r\n        {\r\n            title: \"dnd-draggables-container\",\r\n            items: [[\"L\", \"low\"], [\"H\", \"high\"], [\"hurricane\", \"hurricane\"]],\r\n            accepts: \"All\",\r\n            dataTarget: \"\"\r\n        },\r\n        {\r\n            title: \"dnd-target dnd-target-low-1\",\r\n            items: [],\r\n            accepts: \"low\",\r\n            dataTarget: \"low-1\"\r\n        },\r\n        {\r\n            title: \"dnd-target dnd-target-low-2\",\r\n            items: [],\r\n            accepts: \"low\",\r\n            dataTarget: \"low-2\"\r\n        },\r\n        {\r\n            title: \"dnd-target dnd-target-low-3\",\r\n            items: [],\r\n            accepts: \"low\",\r\n            dataTarget: \"low-3\"\r\n        },\r\n        {\r\n            title: \"dnd-target dnd-target-low-4\",\r\n            items: [],\r\n            accepts: \"low\",\r\n            dataTarget: \"low-4\"\r\n        },\r\n        {\r\n            title: \"dnd-target dnd-target-high-1\",\r\n            items: [],\r\n            accepts: \"high\",\r\n            dataTarget: \"high-1\"\r\n        },\r\n        {\r\n            title: \"dnd-target dnd-target-high-2\",\r\n            items: [],\r\n            accepts: \"high\",\r\n            dataTarget: \"high-2\"\r\n        },\r\n        {\r\n            title: \"dnd-target dnd-target-high-3\",\r\n            items: [],\r\n            accepts: \"high\",\r\n            dataTarget: \"high-3\"\r\n        },\r\n        {\r\n            title: \"dnd-target dnd-target-high-4\",\r\n            items: [],\r\n            accepts: \"high\",\r\n            dataTarget: \"high-4\"\r\n        },\r\n        {\r\n            title: \"dnd-target dnd-target-hurricane-1\",\r\n            items: [],\r\n            accepts: \"hurricane\",\r\n            dataTarget: \"hurricane-1\"\r\n        },\r\n        {\r\n            title: \"dnd-target dnd-target-hurricane-2\",\r\n            items: [],\r\n            accepts: \"hurricane\",\r\n            dataTarget: \"hurricane-2\"\r\n        }\r\n    ]);\r\n    const [initialDragDataCopy, setInitialDragDataCopy] = useState([]);\r\n    const [dropData, setDropData] = useState({\r\n        low: \"\",\r\n        high: \"\",\r\n        hurricane: \"\"\r\n    });\r\n    const [initialDropDataCopy, setInitialDropDataCopy] = useState([]);\r\n    const [isToggled, setIsToggled] = useState(true)\r\n    const [isSubmitted, setIsSubmitted] = useState(false)\r\n    const { isShowing, toggle, modalData } = useModal();\r\n\r\n    useEffect(() => {\r\n        setInitialDragDataCopy(dragData);\r\n        setInitialDropDataCopy(dropData);\r\n    }, []);\r\n\r\n    const getItemStyles = (params) => {\r\n        const currentItem = dragItem.current;\r\n        if (currentItem.grpI === params.grpI && currentItem.itemI === params.itemI) {\r\n            return \"active-item dnd-item\"\r\n        }\r\n        return \"dnd-item\"\r\n    }\r\n\r\n    const getTargetStyles = (params) => {\r\n        params.forEach(param => {\r\n            param.classList.add(\"active\")\r\n        });\r\n    }\r\n\r\n    const handleDragStart = (e, params) => {\r\n        console.log(\"drag starting...\", params)\r\n        dragItem.current = params;\r\n        dragNode.current = e.target;\r\n        dragNode.current.addEventListener(\"dragend\", handleDragEnd)\r\n        setTimeout(() => {\r\n            setDragging(true)\r\n        }, 0);\r\n        document.querySelectorAll(\".active\").forEach(e =>\r\n            e.classList.remove(\"active\"));\r\n        let targets = document.querySelectorAll(`.dnd-target[data-value=${dragNode.current.getAttribute(\"data\")}]`);\r\n        getTargetStyles(targets);\r\n    }\r\n\r\n    const handleDragEnter = (e, params) => {\r\n        console.log(\"Entering drag...\", params)\r\n        const currentItem = dragItem.current;\r\n        if ((e.target.getAttribute(\"data-value\") === dragNode.current.getAttribute(\"data\")) || (e.target.getAttribute(\"data-value\") === \"All\")) {\r\n            setDragData(oldDragData => {\r\n                let newDragData = JSON.parse(JSON.stringify(oldDragData));\r\n                newDragData[params.grpI].items.splice(params.itemI, 0, newDragData[currentItem.grpI].items.splice(currentItem.itemI, 1)[0]);\r\n                dragItem.current = params;\r\n                return newDragData;\r\n            })\r\n            setDropData({ ...dropData, [e.target.getAttribute(\"data-value\")]: e.target.getAttribute(\"data-target\") }\r\n\r\n\r\n                //     ...oldDropData => {\r\n                //     let dataValue = (e.target.getAttribute(\"data-target\"));\r\n\r\n                // }\r\n            )\r\n        }\r\n        // if (e.target !== dragNode.current) {\r\n        //     setDragData(oldDragData => {\r\n        //         let newDragData = JSON.parse(JSON.stringify(oldDragData));\r\n        //         newDragData[params.grpI].items.splice(params.itemI, 0, newDragData[currentItem.grpI].items.splice(currentItem.itemI, 1)[0]);\r\n        //         dragItem.current = params;\r\n        //         return newDragData;\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    const handleDragEnd = () => {\r\n        console.log(\"Ending drag...\")\r\n        document.querySelectorAll(\".active\").forEach(e =>\r\n            e.classList.remove(\"active\"));\r\n        setDragging(false)\r\n        dragNode.current.removeEventListener(\"dragend\", handleDragEnd)\r\n        dragItem.current = null;\r\n        dragNode.current = null;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        document.getElementById(\"dnd-item-hurricane\").style.display = \"none\";\r\n        document.querySelectorAll(\".dnd-target\").forEach(e =>\r\n            e.classList.add(\"is-animating\"));\r\n        setIsSubmitted(!isSubmitted)\r\n    }\r\n\r\n    const handleReset = (e) => {\r\n        e.preventDefault()\r\n        document.querySelectorAll(\".dnd-target\").forEach(e =>\r\n            e.classList.remove(\"is-animating\"));\r\n        setDragData(initialDragDataCopy);\r\n        setDropData(initialDropDataCopy);\r\n        setIsSubmitted(false);\r\n        setIsToggled(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"dnd-wrapper\">\r\n            <h1>Aim a Hurricane</h1>\r\n            <SubContainer classes={\"dnd-inner-wrapper\"}>\r\n\r\n                <ImgWrapper\r\n                    activeTargets={dropData}\r\n                    isToggled={isToggled}\r\n                    isSubmitted={isSubmitted}\r\n                >\r\n                    <div className=\"drag-n-drop\">\r\n                        {dragData.map((grp, grpI) => (\r\n                            <div\r\n                                className={`dnd-group ${grp.title}`}\r\n                                key={grp.title}\r\n                                data-value={grp.accepts}\r\n                                data-target={grp.dataTarget}\r\n                                onDragEnter={dragging && !grp.items.length ? (e) => { handleDragEnter(e, { grpI, itemI: 0 }) } : null}\r\n                            >\r\n                                {grp.items.map((item, itemI) => (\r\n                                    <div\r\n                                        draggable\r\n                                        id={`dnd-item-${item[1]}`}\r\n                                        className={dragging ? getItemStyles({ grpI, itemI }) : \"dnd-item\"}\r\n                                        key={itemI}\r\n                                        data={item[1]}\r\n                                        onDragStart={(e) => { handleDragStart(e, { grpI, itemI }) }}\r\n                                        onDragEnter={dragging ? (e) => { handleDragEnter(e, { grpI, itemI }) } : null}\r\n                                    >\r\n                                        <div>\r\n                                            <p\r\n                                                className={item[1]}\r\n                                                style={item[0] === \"hurricane\" ? { backgroundImage: \"url(./graphics/hurricane_sprite_ani.gif)\" } : null}>\r\n                                                {item[0] === \"hurricane\" ? null : item[0]}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                        <div className=\"button-box\">\r\n                            <div style={dropData.low && dropData.high && dropData.hurricane ? { visibility: \"visible\" } : { visibility: \"hidden\" }}>\r\n                                <label className=\"switch\">Wind Overlay\r\n                                <input\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={isToggled}\r\n                                        onChange={e => setIsToggled(!isToggled)}\r\n                                    />\r\n                                    <span className=\"slider\"></span>\r\n                                </label>\r\n                            </div>\r\n                            <Button\r\n                                type={\"submit\"}\r\n                                handleClick={handleSubmit}\r\n                                text={\"Submit\"}\r\n                            // disabled={}\r\n                            />\r\n                            <Button\r\n                                type={\"reset\"}\r\n                                handleClick={handleReset}\r\n                                text={\"Reset\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </ImgWrapper>\r\n                <SubContainer>\r\n                    <div className=\"info-box\">\r\n                        <button className=\"button-default directions-button\" onClick={e => toggle(e)} data=\"directions\">How to Aim a Hurricane</button>\r\n                        <button className=\"button-default credit-button\" onClick={e => toggle(e)} data=\"credits\">Credits</button>\r\n                        <Modal\r\n                            isShowing={isShowing}\r\n                            hide={e => toggle(e)}\r\n                            modalData={modalData}\r\n                        />\r\n                    </div>\r\n                </SubContainer>\r\n            </SubContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default DndWrapper;","import React from 'react';\nimport Container from \"./Components/Containers/Container\";\nimport SubContainer from \"./Components/Containers/SubContainer\";\nimport DndWrapper from './Components/DndComponents/DndWrapper';\nimport './App.scss';\n\n\nfunction App() {\n\n  return (\n    <Container>\n      <SubContainer>\n        <DndWrapper />\n      </SubContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}